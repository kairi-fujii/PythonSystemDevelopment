@startuml 論理データモデル図_最終版

' === デザイン調整 (skinparam) ===
skinparam {
    BackgroundColor #FFFFFF
    ArrowColor #505050
    shadowing false
    ClassAttributeIconSize 0
    ClassBorderColor #333333
    ClassBackgroundColor #FFFFF0
    PackageBorderColor #505050
    PackageBackgroundColor #FAFAFA
    NoteBorderColor #F0AD4E
    NoteBackgroundColor #FFF8E1
    DefaultFontName "Yu Gothic UI"
    DefaultFontSize 12
}

' === レイアウト方向を左から右へ明確に指定 ===
left to right direction

' === 全体への注釈: この図の読み方 ===
note as N1
  <b>【この図の読み方】</b>
  - この図は、システムが扱う情報の論理的な構造を示します。
  - <u><b>下線付き太字</b></u>はエンティティを一位に識別する主キーです。
  - <i>イタリック</i>は他のエンティティと関連するための外部キーを示します。
  - 線の色と太さは、関連の<b>重要度</b>を表します。
end note

' ===================================
' === ユーザー管理ドメイン ===
' ===================================
package "ユーザー管理" {
    class ユーザー {
      + <u><b>ユーザーID</b></u>: ID
      + ユーザー名: 文字列
      + メールアドレス: 文字列
      + パスワード（ハッシュ化）: 文字列
      + 役割: 文字列
      + 保有ポイント: 数値
      + プロフィール画像: 画像
      + 自己紹介文: テキスト
    }
}

' ===================================
' === フリマ中核ドメイン ===
' ===================================
package "フリマ中核" {
    class カテゴリ {
        + <u><b>カテゴリID</b></u>: ID
        + カテゴリ名: 文字列
        + 作成日時: 日時
    }

    class 商品 {
        + <u><b>商品ID</b></u>: ID
        + <i>出品者ID</i>: ID
        + <i>カテゴリID</i>: ID
        + 商品名: 文字列
        + 商品説明: テキスト
        + 価格: 数値
        + 商品画像: 画像
        + 商品状態: 文字列
        + 販売状況: 文字列
        + 作成日時: 日時
    }

    class 取引 {
        + <u><b>取引ID</b></u>: ID
        + <i>商品ID</i>: ID
        + <i>購入者ID</i>: ID
        + 取引状況: 文字列
        + 購入価格: 数値
        + 手数料: 数値
        + 出品者利益: 数値
        + 作成日時: 日時
    }

    class コメント {
        + <u><b>コメントID</b></u>: ID
        + <i>投稿者ID</i>: ID
        + <i>商品ID</i>: ID
        + 内容: テキスト
        + 作成日時: 日時
    }

    class お気に入り {
        + <i>ユーザーID</i>: ID
        + <i>商品ID</i>: ID
        + 作成日時: 日時
        note on link: ユーザーIDと商品IDの組み合わせで一意
    }

    class メッセージ {
        + <u><b>メッセージID</b></u>: ID
        + <i>取引ID</i>: ID
        + <i>送信者ID</i>: ID
        + 内容: テキスト
        + 既読フラグ: 真偽値
        + 作成日時: 日時
    }

    class 評価 {
        + <u><b>評価ID</b></u>: ID
        + <i>取引ID</i>: ID
        + <i>評価者ID</i>: ID
        + <i>被評価者ID</i>: ID
        + 評価点: 数値 (1-5)
        + コメント: テキスト
        + 作成日時: 日時
    }

    class 通知 {
        + <u><b>通知ID</b></u>: ID
        + <i>受信者ID</i>: ID
        + 内容: 文字列
        + 通知種別: 文字列
        + 関連URL: 文字列
        + 既読フラグ: 真偽値
        + 作成日時: 日時
    }
}

' --- エンティティ間の関連を定義 ---

' ■ 主要な関連 (赤 / 太さ:3)
ユーザー "1" -[#B80000,thickness=3]- "*" 商品 : > 出品する
ユーザー "1" -[#B80000,thickness=3]- "*" 取引 : > 購入する
商品 "1" -[#B80000,thickness=3]- "0..1" 取引 : > 取引される

' ■ 従属的な関連 (青 / 太さ:2)
ユーザー "1" -[#006699,thickness=2]- "*" コメント : > 投稿する
ユーザー "1" -[#006699,thickness=2]- "*" お気に入り : > 登録する
ユーザー "1" -[#006699,thickness=2]- "*" メッセージ : > 送信する
ユーザー "1" -[#006699,thickness=2]- "*" 評価 : > 評価する/される
ユーザー "1" -[#006699,thickness=2]- "*" 通知 : > 受け取る

商品 "1" -[#006699,thickness=2]- "*" コメント : > コメントされる
商品 "1" -[#006699,thickness=2]- "*" お気に入り : > お気に入りされる

取引 "1" -[#006699,thickness=2]- "*" メッセージ : > メッセージを持つ
取引 "1" -[#006699,thickness=2]- "*" 評価 : > 評価を持つ

' ■ マスタ参照 (緑 / 太さ:1)
カテゴリ "1" -[#008000,thickness=1]- "0..*" 商品 : > 分類される

@enduml